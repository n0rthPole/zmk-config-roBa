#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; }; // ダブルクリックに必要な時間を設定
/ {
    combos {
        compatible = "zmk,combos";

        Tab {
            bindings = <&kp TAB>;
            key-positions = <7 8>;
        };

        shift+tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <6 7 8>;
        };

        alt+ctrl+del {
            bindings = <&kp LA(LC(DELETE))>;
            key-positions = <9 41>;
        };

        screen_shot {
            bindings = <&kp LS(LG(S))>;
            key-positions = <3 4 2>;
        };

        layer3 {
            bindings = <&sl 3>;
            key-positions = <19 20>;
        };

        left_click {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <18 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        macro0: macro0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(RC(V)) &kp V &kp ENTER>;
            label = "MACRO0";
        };

        macro1: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(H) &kp M &kp C &kp ENTER>;
            label = "MACRO1";
        };

        macro2: macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(G) &kp LA(S) &kp K &kp ENTER>;
            label = "MACRO2";
        };

        macro3: macro3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp D &kp F &kp S>;
            label = "MACRO3";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        // 新しいスクロール動作の追加

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q    &kp W         &kp E         &kp R                      &kp T                                                          &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F                      &kp G        &kp LS(N8)                         &kp LS(N9)     &kp H        &kp J  &lt 5 K    &kp L    &mt LCTRL MINUS
&kp Z      &kp X         &kp C         &kp V                      &kp B        &none                              &kp B          &kp N        &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANG_HANJA  &lt 1 SPACE  &lt_to_layer_0 5 LANG_HANGEUL      &kp BACKSPACE  &lt 2 ENTER                             &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp F1     &kp F2           &kp F3            &kp F4        &trans                                         &kp F6            &kp F7    &kp F8         &kp F9               &kp F10
&kp F5     &kp EXCLAMATION  &kp LS(NUMBER_6)  &kp QUESTION  &kp RIGHT_BRACKET  &sys_reset      &sys_reset  &kp LEFT_BRACKET  &mkp MB1  &kp PAGE_UP    &mkp MB2             &kp SQT
&kp PLUS   &kp PERCENT      &kp AMPERSAND     &kp AT_SIGN   &none              &none           &none       &kp LS(INT1)      &none     &kp PAGE_DOWN  &kp INTERNATIONAL_3  &kp F11
&kp LCTRL  &kp LEFT_SHIFT   &kp HASH          &trans        &trans             &trans          &trans      &trans                                                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE       &kp KP_NUMBER_7             &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                                &kp LS(TAB)    &none           &kp LG(TAB)     &none            &kp TAB
&kp KP_ASTERISK  &kp KP_NUMBER_4             &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp COLON      &none              &none  &kp BACKSLASH  &mkp MB4        &kp UP_ARROW    &mkp MB5         &kp SQT
&kp KP_DIVIDE    &kp KP_NUMBER_1             &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LS(MINUS)  &kp KP_NUM         &none  &kp LC(HOME)   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(END)
&mt LCTRL COMMA  &mt LEFT_SHIFT KP_NUMBER_0  &kp KP_DOT       &kp DELETE       &kp ENTER      &kp BACKSPACE      &none  &none                                                           &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&trans        &kp LG(LEFT_ARROW)      &kp LS(LC(UP_ARROW))    &kp LG(RIGHT_ARROW)      &trans                      &trans  &trans  &trans  &trans  &trans
&kp LG(HOME)  &kp LS(LC(LEFT_ARROW))  &kp LS(LC(DOWN_ARROW))  &kp LS(LC(RIGHT_ARROW))  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LS(LG(LEFT_ARROW))  &kp LG(D)               &kp LS(LG(RIGHT_ARROW))  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans                  &trans                  &trans                   &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans     &trans  &trans  &trans  &trans                      &trans  &trans              &trans  &trans              &trans
&trans     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp_exit_AML LCLK  &mo 5   &mkp_exit_AML RCLK  &trans
&trans     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans              &trans  &trans              &trans
&kp LCTRL  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&kp LA(F8)  &macro2    &trans            &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)                      &trans  &kp LS(LC(L))  &macro3        &trans  &trans
&kp LC(Y)   &kp LC(X)  &kp LS(LC(SEMI))  &kp LC(MINUS)    &trans             &trans      &trans  &trans  &trans         &kp PAGE_UP    &trans  &trans
&kp LC(Z)   &kp LC(C)  &macro0           &macro1          &trans             &trans      &trans  &trans  &trans         &kp PAGE_DOWN  &trans  &trans
&trans      &trans     &trans            &trans           &trans             &trans      &trans  &trans                                        &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans        &kp C_BRI_UP  &kp C_VOL_UP  &trans        &trans
&trans  &trans  &trans  &trans  &trans  &bootloader      &bootloader  &trans        &kp C_BRI_DN  &kp C_VOL_DN  &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
